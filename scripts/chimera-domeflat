#!/usr/bin/env python

import copy
import sys

from chimera.core.callback import callback
from chimera.core.cli import ChimeraCLI, action
from chimera.core.compat import freeze_support


class ChimeraAutoFlat(ChimeraCLI):
    def __init__(self):
        ChimeraCLI.__init__(self, "chimera-domeflat", "DomeFlats", 0.1)
        self.addHelpGroup("DOMEFLAT", "domeFlats")
        self.addController(name="domeflat",
                           cls="AutoDomeFlat",
                           required=True,
                           helpGroup="DOMEFLAT",
                           help="Auto Dome Flats")
        self.addParameters(
            dict(name='filter', long='filter', short='f', required=True, type='string', helpGroup='DOMEFLAT', help='Dome filter name'),
            dict(name='number', long='number', short='n', type='int', helpGroup='DOMEFLAT', help='Number of dome to take on the filter')
        )

    @action(long="auto", help="Does a sequence of dome flats", helpGroup="DOMEFLAT")
    def doSequence(self, options):
        """
        Sets variables using command line options
        Take dome flats according to options
        """

        @callback(self.localManager)
        def exposeComplete(filter_id, i_flat, exptime, counts):
            self.out('Filter: %s, flat # %i - Exposure time: %3.2f seconds - Counts: %3.2f' % (filter_id, i_flat+1, exptime, counts))

        self.domeflat.exposeComplete += exposeComplete

        for filter_id in options.filter.split(','):
            self.domeflat.getFlats(filter_id, n_flats=options.number)
        self.out("Finished.")

        self.domeflat.exposeComplete -= exposeComplete


    def __abort__(self):
        self.out("\naborting... ", endl="")

        # copy self.skyflat Proxy because we are running from a differente
        # thread (yes, Pyro is tricky!)
        domeflat = copy.copy(self.domeflat)
        domeflat.abort()


def main():
    cli = ChimeraAutoFlat()
    cli.run(sys.argv)
    cli.wait()


if __name__ == '__main__':
    freeze_support()
    main()